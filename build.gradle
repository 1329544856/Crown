description = "Crown"

configurations {
    compile.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    compile.exclude group: "org.apache.tomcat", module: "tomcat-jdbc"
}

buildscript {
    repositories {
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

group = "org.crown"
version = "1.0"

apply plugin: "java-library"
apply plugin: "org.springframework.boot"
apply plugin: 'jacoco'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    //options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "https://jitpack.io" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    jcenter()
}

dependencies {
    api("org.springframework.boot:spring-boot-starter:${springBootVersion}")
    api("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    api("org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}")
    api("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    api("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    api("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
    api("org.springframework.boot:spring-boot-starter-cache:${springBootVersion}")
    api("org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}")
    api("eu.bitwalker:UserAgentUtils:1.21")
    api("com.baomidou:mybatis-plus-boot-starter:3.0.6")
    api("com.baomidou:mybatis-plus:3.0.6")
    api("mysql:mysql-connector-java:8.0.12")
    api("org.apache.commons:commons-lang3:3.8")
    api("net.sf.ehcache:ehcache:2.10.5")
    api("com.alibaba:fastjson:1.2.49")
    api("io.springfox:springfox-swagger-ui:2.6.1")
    api("io.springfox:springfox-swagger2:2.6.1")
    api("org.apache.httpcomponents:httpclient:4.5.6")

    api("io.jsonwebtoken:jjwt:0.9.1")
    api("org.apache.commons:commons-collections4:4.2")
    api("commons-io:commons-io:2.5")
    api("aopalliance:aopalliance:1.0")
    api("commons-codec:commons-codec:1.11")
    api("org.hibernate:hibernate-validator:6.0.13.Final")
    api("org.liquibase:liquibase-core:3.5.3")
    api("org.modelmapper:modelmapper:2.3.0")
    api("com.vip.vjtools:vjkit:1.0.6")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("org.apache.velocity:velocity-engine-core:2.0")
    testCompile("org.projectlombok:lombok:1.16.18")
    compileOnly("org.projectlombok:lombok:1.16.18")
    annotationProcessor("org.projectlombok:lombok:1.16.18")
    testAnnotationProcessor("org.projectlombok:lombok:1.16.18")
}

tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

bootJar {
    baseName = "crown"
    version = ""
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

check.dependsOn jacocoTestReport
